# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/parking_system
spring.datasource.username=postgres
spring.datasource.password=sohaibsohaib2
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Security Configuration
spring.security.oauth2.client.registration.google.client-id=910327664002-svo7fsi7thcp853aashisdgav43i0ink.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Application Configuration
parking.slot.rate=50
parking.slot.duration.hours=12
parking.booking.same-day-only=true

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# Logging Configuration
logging.level.com.parkingsystem=DEBUG
logging.level.org.springframework.security=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# JWT Configuration
jwt.secret=${JWT_SECRET_KEY}
jwt.expiration=86400000

# Cross-Origin Configuration
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
